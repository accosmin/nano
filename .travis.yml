sudo: required
dist: trusty
language: cpp

before_script:
  - echo $TRAVIS_OS_NAME
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew update
      brew install cmake ninja devil libarchive python3
      brew link libarchive --force
      brew upgrade python
      brew postinstall python3
      pip3 install urllib3
      export PATH="/usr/local/opt/ccache/libexec:$PATH"
    fi
  - mkdir build
  - cd build

matrix:
  include:
    - os: linux
      compiler: gcc
      env: TEST="build (gcc-5)"
      addons:
        apt:
          packages: ['gcc-5', 'g++-5', 'libdevil-dev', 'libarchive-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - ubuntu-toolchain-r-test
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=g++-5 -DNANO_WITH_GOLD=OFF -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: gcc
      env: TEST="build (gcc-6)"
      addons:
        apt:
          packages: ['gcc-6', 'g++-6', 'libdevil-dev', 'libarchive-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - ubuntu-toolchain-r-test
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=g++-6 -DNANO_WITH_GOLD=OFF -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: gcc
      env: TEST="build (gcc-7)"
      addons:
        apt:
          packages: ['gcc-7', 'g++-7', 'libdevil-dev', 'libarchive-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - ubuntu-toolchain-r-test
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=g++-7 -DNANO_WITH_GOLD=OFF -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="build (clang-3.8)"
      addons:
        apt:
          packages: ['clang-3.8', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-3.8
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-3.8 -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="build (clang-4.0)"
      addons:
        apt:
          packages: ['clang-4.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-4.0
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-4.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="build (clang-5.0)"
      addons:
        apt:
          packages: ['clang-5.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-5.0
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="build (clang-6.0)"
      addons:
        apt:
          packages: ['clang-6.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-6.0
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-6.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="ASAN (clang-5.0)"
      addons:
        apt:
          packages: ['clang-5.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-5.0
      script:
        - PATH=$PATH:/usr/lib/llvm-5.0/bin/
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_ASAN=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    #- os: linux
    #  compiler: clang
    #  env: TEST="MSAN (clang-5.0)"
    #  addons:
    #    apt:
    #      packages: ['clang-5.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
    #      sources: &sources
    #        - llvm-toolchain-trusty-5.0
    #  script:
    #    - PATH=$PATH:/usr/lib/llvm-5.0/bin/
    #    - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_MSAN=ON -DNANO_WITH_LIBCPP=ON ..
    #    - ninja
    #    - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="TSAN (clang-5.0)"
      addons:
        apt:
          packages: ['clang-5.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-5.0
      script:
        - PATH=$PATH:/usr/lib/llvm-5.0/bin/
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_TSAN=ON -DNANO_WITH_LIBCPP=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: linux
      compiler: clang
      env: TEST="clang-tidy (clang-5.0)"
      addons:
        apt:
          packages: ['clang-5.0', 'clang-tidy-5.0', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-5.0
      script:
        - PATH=$PATH:/usr/lib/llvm-5.0/bin/
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON -DNANO_WITH_CLANG_TIDY=ON ..
        - bash ../scripts/ci_clang_tidy.sh

    - os: linux
      compiler: clang
      env: TEST="valgrind (clang-5.0)"
      addons:
        apt:
          packages: ['clang-5.0', 'valgrind', 'libdevil-dev', 'libarchive-dev', 'libc++-dev', 'libc++abi-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - llvm-toolchain-trusty-5.0
      script:
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-5.0 -DCMAKE_BUILD_TYPE=Release -DNANO_WITH_WERROR=ON -DNANO_WITH_LIBCPP=ON -DNANO_WITH_TUNE_NATIVE=OFF ..
        - ninja
        - bash ../scripts/ci_valgrind.sh

    - os: linux
      compiler: gcc
      env: TEST="codecov (gcc-7)"
      addons:
        apt:
          packages: ['gcc-7', 'g++-7', 'gcovr', 'libdevil-dev', 'libarchive-dev', 'ninja-build', 'python3-pip']
          sources: &sources
            - ubuntu-toolchain-r-test
      script:
        - sudo -H pip install --upgrade pip
        - sudo -H pip install coverage
        - cmake -G "Ninja" -DCMAKE_CXX_COMPILER=g++-7 -DCMAKE_BUILD_TYPE=Release -DNANO_WITH_WERROR=ON -DNANO_WITH_COVERAGE=ON -DNANO_WITH_GOLD=OFF ..
        - ninja
        - bash ../scripts/ci_codecov.sh

    - os: osx
      compiler: clang
      osx_image: xcode7.3
      env: TEST="build (xcode7.3)"
      script:
        - cmake -G "Ninja" -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: osx
      compiler: clang
      osx_image: xcode8.3
      env: TEST="build (xcode8.3)"
      script:
        - cmake -G "Ninja" -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh

    - os: osx
      compiler: clang
      osx_image: xcode9.1
      env: TEST="build (xcode9.1)"
      script:
        - cmake -G "Ninja" -DNANO_WITH_WERROR=ON ..
        - ninja
        - bash ../scripts/ci_ctest.sh
