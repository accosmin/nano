sudo: required
dist: xenial
language: cpp

branches:
  only:
    - 0.4

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
          packages:
            - g++-4.9
      env: COMPILER=g++-4.9
    - compiler: gcc
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
          packages:
            - g++-5
      env: COMPILER=g++-5
    - compiler: gcc
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
          packages:
            - g++-6
      env: COMPILER=g++-6
    - compiler: clang
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang++-3.6
    - compiler: clang
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env: COMPILER=clang++-3.7
    - compiler: clang
      addons:
        apt:
          sources: &sources
            - ubuntu-toolchain-r-test
            - nschloe/eigen-backports
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env: COMPILER=clang++-3.8
    - os: osx
      osx_image: xcode7.3.1
    - os: osx
      osx_image: xcode8

install:
  - echo $TRAVIS_OS_NAME
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install cmake ninja eigen devil libarchive; brew link libarchive --force; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq && sudo apt-get install -y clang-3.6 clang-3.7 clang-3.8 g++-4.9 g++-5 g++-6 cmake cmake-data ninja-build libbz2-dev libdevil-dev libeigen3-dev libarchive-dev && export CXX="$COMPILER"; fi
  - mkdir build

before_script:
  - pwd

script:
  - time bash build.sh --build-type Release --generator ninja --float
  - ./build-release/apps/info --system
  - cd build-release/test && time ctest -j 3 -E "test_task_*"
  - cd ../../
  - ./build-release/apps/info --system
  - time bash build.sh --build-type Release --generator ninja --double
  - cd build-release/test && time ctest -j 3 -E "test_task_*"
