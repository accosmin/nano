sudo: required
dist: trusty
language: cpp
cache: ccache

branches:
  only:
    - master

matrix:
  include:
    - compiler: gcc
      env: COMPILER=g++-4.9 PACKAGES=g++-4.9
    - compiler: gcc
      env: COMPILER=g++-5 PACKAGES=g++-5
    - compiler: gcc
      env: COMPILER=g++-6 PACKAGES=g++-6
    - compiler: gcc
      env: COMPILER=g++-7 PACKAGES=g++-7
    - compiler: clang
      env: COMPILER=clang++-3.6 PACKAGES=clang-3.6_libc++abi-dev_libc++-dev PARAMS=--libc++
    - compiler: clang
      env: COMPILER=clang++-3.7 PACKAGES=clang-3.7_libc++abi-dev_libc++-dev PARAMS=--libc++
    - compiler: clang
      env: COMPILER=clang++-3.8 PACKAGES=clang-3.8_libc++abi-dev_libc++-dev PARAMS=--libc++
    - compiler: clang
      env: COMPILER=clang++-3.9 PACKAGES=clang-3.9_libc++abi-dev_libc++-dev PARAMS=--libc++
    - compiler: clang
      env: COMPILER=clang++-4.0 PACKAGES=clang_clang-4.0_libc++abi-dev_libc++-dev PARAMS=--libc++
    - compiler: clang
      env: COMPILER=clang++-5.0 PACKAGES=clang_clang-5.0_libc++abi-dev_libc++-dev PARAMS=--libc++
    - os: osx
      osx_image: xcode7.3.1
      env: COMPILER=xcode7
    - os: osx
      osx_image: xcode8
      env: COMPILER=xcode8

install:
  - echo $TRAVIS_OS_NAME
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew update
      brew install cmake ninja eigen devil libarchive ccache
      brew link libarchive --force
      export PATH="/usr/local/opt/ccache/libexec:$PATH"
      export CCACHE_CPP2=true
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo add-apt-repository ppa:nschloe/eigen-backports -y
      if [ "$COMPILER" = "clang++*" ]; then
        sudo echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty${COMPILER/clang++/} main" >> /etc/apt/sources.list
        sudo echo "deb-src http://apt.llvm.org/trusty/ llvm-toolchain-trusty${COMPILER/clang++/} main" >> /etc/apt/sources.list
        sudo echo "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main" >> /etc/apt/sources.list
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      else
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      fi
      sudo apt-get update -qq
      sudo apt-get install -y ${PACKAGES//_/ } ccache cmake cmake-data ninja-build libdevil-dev libeigen3-dev libarchive-dev
      export CXX="$COMPILER"
      export CCACHE_CPP2=true
    fi
  - mkdir build

before_script:
  - pwd

script:
#  - time bash build.sh --build-type Release --generator ninja --float --werror --ccache ${PARAMS}
#  - ./build-release/apps/info --system
#  - cd build-release/test && time ctest -j 2 -E "test_task_*"
#  - cd ../../
  - time bash build.sh --build-type Debug --generator ninja --float --werror --ccache ${PARAMS}
  - ./build-debug/apps/info --system
  - cd build-debug/test && time ctest -j 2 -E "test_task_*"
  - cd ../../
#  - ./build-release/apps/info --system
#  - time bash build.sh --build-type Release --generator ninja --double --werror --ccache ${PARAMS}
#  - cd build-release/test && time ctest -j 2 -E "test_task_*"
